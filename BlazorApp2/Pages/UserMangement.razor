@page "/skill-management"
@using BlazorApp2.Data
@inject EmployeeServices EmployeeService

<h2>Employee List</h2>

<table class="table">
    <thead>
        <tr>
            <th>Full Name</th>
            <th>Primary Email</th>
            <th>Skills</th>
          
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.FullName</td>
                <td>@primaryEmails[user.Id]</td>
                <td>@String.Join(", ", userSkills[user.Id].Select(skill => skill.SkillName))</td>
               
            </tr>
        }
    </tbody>
</table>

@code {
    private List<User> users = new List<User>();
    private Dictionary<int, string> primaryEmails = new Dictionary<int, string>();
    private Dictionary<int, List<Skill>> userSkills = new Dictionary<int, List<Skill>>();

    protected override async Task OnInitializedAsync()
    {
        users = await EmployeeService.GetEmployeesAsync();
        foreach (var user in users)
        {
            var email = await EmployeeService.GetPrimaryEmailAsync(user);
            primaryEmails[user.Id] = email;
            var skills = await EmployeeService.GetSkillsByUserIdAsync(user.Id); // Assume this method exists and fetches skills for a user
            userSkills[user.Id] = skills.ToList();
        }
    }

    private async Task ActivateEmployee(User user)
    {
        user.IsActive = true;
        await EmployeeService.UpdateEmployeeAsync(user);
        // Optionally refresh
    }

    private async Task DeactivateEmployee(User user)
    {
        user.IsActive = false;
        await EmployeeService.UpdateEmployeeAsync(user);
        // Optionally refresh
    }
}
